name: Deploy to Remote Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Start Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.REMOTE_PORT }}
          script: |
            set -e

            echo "======================================="
            echo "[INFO] Connecting to Remote Server"
            echo "======================================="
            cd /home/lxt/project/tech-backend/cmd

            echo
            echo "======================================="
            echo "[INFO] Writing .env configuration"
            echo "======================================="
            printf '%s\n' "${{ secrets.ENV_FILE_CONTENT }}" > .env
            echo "[INFO] .env file updated ✅"

            cd /home/lxt/project/tech-backend

            echo
            echo "======================================="
            echo "[INFO] Fetching Latest Code"
            echo "======================================="
            git fetch --all
            git reset --hard origin/main
            git status

            echo
            echo "======================================="
            echo "[INFO] Showing project structure"
            echo "======================================="
            ls -lah
            ls -lah cmd/

            echo
            echo "======================================="
            echo "[INFO] Building Docker images"
            echo "======================================="
            docker compose build

            echo
            echo "======================================="
            echo "[INFO] Starting Docker containers"
            echo "======================================="
            docker compose up -d

            echo
            echo "======================================="
            echo "[INFO] Waiting for containers to start"
            echo "======================================="
            sleep 5

            echo
            echo "======================================="
            echo "[INFO] Verifying running containers"
            echo "======================================="
            docker compose ps

            if [ "$(docker compose ps | grep -c 'Up')" -eq 0 ]; then
              echo
              echo "[ERROR] ❌ No containers are Up!"
              docker compose ps
              exit 1
            fi

            echo
            echo "✅ [SUCCESS] All containers are up and running"
